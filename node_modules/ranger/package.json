{
  "name": "ranger",
  "description": "A node.js library for interacting with Campfire",
  "keywords": [
    "campfire",
    "chat",
    "api"
  ],
  "author": {
    "name": "Matt Duncan",
    "email": "matt@mattduncan.org",
    "url": "http://mattduncan.org"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mrduncan/ranger"
  },
  "bugs": {
    "url": "http://github.com/mrduncan/ranger/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/mrduncan/ranger/raw/master/LICENSE"
    }
  ],
  "lib": "lib",
  "main": "./lib/ranger",
  "version": "0.2.4",
  "engines": {
    "node": "0.4 || 0.5"
  },
  "homepage": "http://github.com/mrduncan/ranger",
  "directories": {
    "lib": "lib"
  },
  "readme": "Ranger\n======\n\nRanger is a [node.js](http://nodejs.org/) library for interacting with [Campfire](http://campfirenow.com/).\n\nInstall\n-------\nInstall ranger using [npm](http://npmjs.org/).\n\n    npm install ranger\n\nAPI\n---\nCreate a new client with the following:\n\n    var client = require(\"ranger\").createClient(\"account\", \"api-key\");\n\nThe createClient function takes two parameters:\n\n1. The account name, which is the subdomain of your account url.  If your account url is `37signals.campfire.com` then your account name would be `37signals`.\n2. The api key of the user to connect as.  You can get it from the \"My info\" link once logged into Campfire.\n\n### Client\nGet a room by id:\n\n    client.room(12345, function (room) { console.log(room); });\n\nGet an array of all rooms:\n\n    client.rooms(function (rooms) { console.log(rooms); });\n\nGet an array of all rooms the api user is in:\n\n    client.presence(function (rooms) { console.log(rooms) });\n\nSearch for messages containing terms:\n\n    client.search(\"party time\", function (messages) { console.log(messages) });\n\nGet a user by id:\n\n    client.user(12345, function (user) { console.log(user); });\n\nGet the api user:\n\n    client.me(function (user) { console.log(user); });\n\n### Room\nSpeak a message:\n\n    room.speak(\"hello world\");\n\nPaste some text:\n\n    room.paste(\"hello\\nworld\");\n\nPlay a sound:\n\n    room.play(\"trombone\");\n\nShow a tweet:\n\n    room.tweet(\"https://twitter.com/#!/jack/status/20\");\n\nUpdate the room:\n\n    room.update({ name: \"Lounge\", topic: \"Anything goes\" });\n\nJoin the room:\n\n    room.join();\n\nLeave the room:\n\n    room.leave();\n\nLock the room:\n\n    room.lock();\n\nUnlock the room:\n\n    room.unlock();\n\nGet an array of users in the room:\n\n    room.users(function (users) { console.log(users); });\n\nGet an array of up to 5 recent file uploads in the room:\n\n    room.recentUploads(function (uploads) { console.log(uploads); });\n\nGet an array of up to 100 recent messages in the room:\n\n    room.recentMessages(function (messages) { console.log(messages); });\n\nListen for messages in the room:\n\n    room.listen(function (message) { console.log(message); });\n\nGet whether messages are being listened for:\n\n    room.isListening();\n\nStop listening for messages in the room:\n\n    room.stopListening();\n\nGet an array of messages for a day:\n\n    room.transcript(function (messages) { console.log(messages); });\n\n    var newYears = new Date(2011, 0, 1);\n    room.transcript(newYears, function (messages) { console.log(messages); });\n\n### Message\nStar the message:\n\n    message.star();\n\nUnstar the message:\n\n    message.unstar();\n\nGet the upload details for the message:\n\n    message.upload(function (upload) { console.log(upload); });\n\n\nExamples\n--------\nThe following example joins room 123456 and plays the vuvuzela sound whenever\nanyone uses the word \"soccer\".\n\n    var client = require(\"ranger\").createClient(\"account\", \"api-key\");\n    client.room(123456, function (room) {\n      room.join(function () {\n        room.listen(function (message) {\n          if (message.type = \"TextMessage\" && message.body.match(/soccer/i)) {\n            room.play(\"vuvuzela\");\n          }\n        });\n      });\n    });\n\nContributing\n------------\n\n1. [Fork](http://help.github.com/fork-a-repo/) Ranger\n2. Create a topic branch - git checkout -b mybranch\n3. Push to your branch - git push origin mybranch\n4. Create a new pull request\n\nAuthor\n------\nMatt Duncan | [mattduncan.org](http://mattduncan.org) | [matt@mattduncan.org](mailto:matt@mattduncan.org)\n",
  "readmeFilename": "README.md",
  "_id": "ranger@0.2.4",
  "dist": {
    "shasum": "57af59c9018f48ac737134fed6a68b6e51d2770b"
  },
  "_from": "ranger@*",
  "_resolved": "https://registry.npmjs.org/ranger/-/ranger-0.2.4.tgz"
}
